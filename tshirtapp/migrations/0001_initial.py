# Generated by Django 2.2 on 2019-05-24 02:00

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('attribute_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ShoppingCart',
            fields=[
                ('item_id', models.AutoField(primary_key=True, serialize=False)),
                ('attributes', models.CharField(max_length=1000)),
                ('quantity', models.IntegerField()),
                ('buy_now', models.IntegerField()),
                ('added_on', models.DateTimeField()),
            ],
            options={
                'db_table': 'shopping_cart',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created time')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated time')),
                ('is_customer', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'unique_together': {('username', 'email')},
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AttributeValue',
            fields=[
                ('attribute_value_id', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=100)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tshirtapp.Attribute')),
            ],
            options={
                'db_table': 'attribute_value',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created time')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated time')),
                ('customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('credit_card', models.TextField(blank=True, null=True)),
                ('address_1', models.CharField(blank=True, max_length=100, null=True)),
                ('address_2', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('region', models.CharField(blank=True, max_length=100, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('day_phone', models.CharField(blank=True, max_length=100, null=True)),
                ('eve_phone', models.CharField(blank=True, max_length=100, null=True)),
                ('mob_phone', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'customer',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('department_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'department',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=1000)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discounted_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('image', models.CharField(blank=True, max_length=150, null=True)),
                ('image_2', models.CharField(blank=True, max_length=150, null=True)),
                ('thumbnail', models.CharField(blank=True, max_length=150, null=True)),
                ('display', models.SmallIntegerField()),
                ('product_attribute', models.ManyToManyField(to='tshirtapp.AttributeValue')),
                ('product_category', models.ManyToManyField(to='tshirtapp.Category')),
            ],
            options={
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='ShippingRegion',
            fields=[
                ('shipping_region_id', models.AutoField(primary_key=True, serialize=False)),
                ('shipping_region', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'shipping_region',
            },
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('tax_id', models.AutoField(primary_key=True, serialize=False)),
                ('tax_type', models.CharField(max_length=100)),
                ('tax_percentage', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'tax',
            },
        ),
        migrations.CreateModel(
            name='Shipping',
            fields=[
                ('shipping_id', models.AutoField(primary_key=True, serialize=False)),
                ('shipping_type', models.CharField(max_length=100)),
                ('shipping_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('shipping_region_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tshirtapp.ShippingRegion')),
            ],
            options={
                'db_table': 'shipping',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('review_id', models.AutoField(primary_key=True, serialize=False)),
                ('review', models.TextField()),
                ('rating', models.SmallIntegerField()),
                ('created_on', models.DateTimeField()),
                ('customer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tshirtapp.Customer')),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tshirtapp.Product')),
            ],
            options={
                'db_table': 'review',
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='name', max_length=100)),
                ('category', models.ForeignKey(on_delete='CASCADE', to='tshirtapp.AttributeValue', verbose_name='category_id')),
                ('product', models.OneToOneField(on_delete='CASCADE', to='tshirtapp.Product', verbose_name='product_id')),
            ],
            options={
                'db_table': 'product_category',
            },
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute_value', models.ForeignKey(on_delete='CASCADE', to='tshirtapp.AttributeValue', verbose_name='attribute_value_id')),
                ('product_id', models.ForeignKey(on_delete='CASCADE', to='tshirtapp.Product')),
            ],
            options={
                'db_table': 'product_attribute',
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('order_id', models.AutoField(primary_key=True, serialize=False)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_on', models.DateTimeField()),
                ('shipped_on', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('comments', models.CharField(blank=True, max_length=255, null=True)),
                ('auth_code', models.CharField(blank=True, max_length=50, null=True)),
                ('reference', models.CharField(blank=True, max_length=50, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tshirtapp.Customer')),
                ('shipping', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tshirtapp.Shipping')),
                ('tax', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tshirtapp.Tax')),
            ],
            options={
                'db_table': 'orders',
            },
        ),
        migrations.CreateModel(
            name='OrderDetail',
            fields=[
                ('item_id', models.AutoField(primary_key=True, serialize=False)),
                ('attributes', models.CharField(max_length=1000)),
                ('product_name', models.CharField(max_length=100)),
                ('quantity', models.IntegerField()),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tshirtapp.Orders')),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tshirtapp.Product')),
            ],
            options={
                'db_table': 'order_detail',
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='shipping_region',
            field=models.ForeignKey(blank=True, null=True, on_delete='CASCADE', to='tshirtapp.ShippingRegion', verbose_name='shipping_region'),
        ),
        migrations.AddField(
            model_name='customer',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customer', to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
        migrations.AddField(
            model_name='category',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tshirtapp.Department', verbose_name='department_id'),
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tshirtapp.Customer')),
            ],
            options={
                'db_table': 'cart',
            },
        ),
        migrations.CreateModel(
            name='Audit',
            fields=[
                ('audit_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField()),
                ('message', models.TextField()),
                ('code', models.IntegerField()),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tshirtapp.Orders')),
            ],
            options={
                'db_table': 'audit',
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created time')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated time')),
                ('credit_card', models.TextField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
